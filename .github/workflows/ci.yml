name: Continuous Integration
on: 
  push:
    branches:    
  #  - main
    - 'Mod**'
    paths-ignore:
    - '**/README.md'

env:
      # Use docker.io for Docker Hub if empty
      REGISTRY: docker.io
      IMAGE_NAME: ${{ github.repository }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      TF_VAR_SECRET_KEY: ${{ secrets.SECRET_KEY }}
      TF_VAR_OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
      TF_VAR_OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}


jobs:
  terraform:
          runs-on: ubuntu-latest

          steps:
            - uses: actions/checkout@v3
#            -  uses: hashicorp/setup-terraform@v1
#            - run: terraform --version
            - run: terraform init
            - run: terraform validate
              continue-on-error: false
            - run: terraform plan -out tfplanfile
            - run: terraform apply  -auto-approve -input=false tfplanfile
  test:
          name: test
          runs-on: ubuntu-latest
          needs:
            - terraform
          steps:
              - uses: actions/checkout@v3
              - uses: snyk/actions/python@master

                continue-on-error: true
                env:
                  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  
              - run: docker build --target test --tag todo-app:test .
              - run: docker run  --env-file .env.test -p 5000:5000 --entrypoint poetry todo-app:test run safety check
              - run: docker run --env-file .env.test -p 5000:5000 todo-app:test
                continue-on-error: true
  deploy:
          name: deploy
          needs: test
          runs-on: ubuntu-latest
          steps:
            - uses: actions/checkout@v3
            - uses: docker/setup-buildx-action@v2
            - uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}
              
            - name: Build and push Docker image
              uses: docker/build-push-action@v2
              with:
                  #  context: "{{defaultContext}}"
                    push: true
                    tags: lvarnham/smellybeagle:latest
                    labels: production

            - run: docker build --target production --tag lvarnham/smellybeagle:latest .
            - run: docker push lvarnham/smellybeagle:latest
 #           - env:
              #GHWEBHOOK: $(terraform output production_webhook_url)
              #  GHWEBHOOK: ${{ secrets.WEBHOOK_SECTRET }}
            - run: terraform init
            - run: curl -dH -X POST $(terraform output -raw production_webhook_url)
